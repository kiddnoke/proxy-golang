// Code generated by protoc-gen-go. DO NOT EDIT.
// source: record.proto

package igg_reporter

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Record struct {
	SnId                 int32    `protobuf:"varint,1,opt,name=sn_id,json=snId,proto3" json:"sn_id,omitempty"`
	UserId               int32    `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DeviceId             string   `protobuf:"bytes,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Os                   string   `protobuf:"bytes,4,opt,name=os,proto3" json:"os,omitempty"`
	AppVersion           string   `protobuf:"bytes,5,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
	Ip                   string   `protobuf:"bytes,6,opt,name=ip,proto3" json:"ip,omitempty"`
	TimeStamp            int64    `protobuf:"varint,7,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"`
	Website              string   `protobuf:"bytes,8,opt,name=website,proto3" json:"website,omitempty"`
	ConnectTime          int32    `protobuf:"varint,9,opt,name=connect_time,json=connectTime,proto3" json:"connect_time,omitempty"`
	Rate                 int32    `protobuf:"varint,10,opt,name=rate,proto3" json:"rate,omitempty"`
	Traffic              int32    `protobuf:"varint,11,opt,name=traffic,proto3" json:"traffic,omitempty"`
	CarrierOperator      string   `protobuf:"bytes,12,opt,name=carrier_operator,json=carrierOperator,proto3" json:"carrier_operator,omitempty"`
	UserType             string   `protobuf:"bytes,13,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Record) Reset()         { *m = Record{} }
func (m *Record) String() string { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()    {}
func (*Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_record_a184581568059c62, []int{0}
}
func (m *Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Record.Unmarshal(m, b)
}
func (m *Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Record.Marshal(b, m, deterministic)
}
func (dst *Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Record.Merge(dst, src)
}
func (m *Record) XXX_Size() int {
	return xxx_messageInfo_Record.Size(m)
}
func (m *Record) XXX_DiscardUnknown() {
	xxx_messageInfo_Record.DiscardUnknown(m)
}

var xxx_messageInfo_Record proto.InternalMessageInfo

func (m *Record) GetSnId() int32 {
	if m != nil {
		return m.SnId
	}
	return 0
}

func (m *Record) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Record) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *Record) GetOs() string {
	if m != nil {
		return m.Os
	}
	return ""
}

func (m *Record) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *Record) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Record) GetTimeStamp() int64 {
	if m != nil {
		return m.TimeStamp
	}
	return 0
}

func (m *Record) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *Record) GetConnectTime() int32 {
	if m != nil {
		return m.ConnectTime
	}
	return 0
}

func (m *Record) GetRate() int32 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *Record) GetTraffic() int32 {
	if m != nil {
		return m.Traffic
	}
	return 0
}

func (m *Record) GetCarrierOperator() string {
	if m != nil {
		return m.CarrierOperator
	}
	return ""
}

func (m *Record) GetUserType() string {
	if m != nil {
		return m.UserType
	}
	return ""
}

func init() {
	proto.RegisterType((*Record)(nil), "igg.reporter.Record")
}

func init() { proto.RegisterFile("record.proto", fileDescriptor_record_a184581568059c62) }

var fileDescriptor_record_a184581568059c62 = []byte{
	// 283 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0xd0, 0xcd, 0x6e, 0xc2, 0x30,
	0x0c, 0x07, 0x70, 0xb5, 0x40, 0xa1, 0xa6, 0xfb, 0x90, 0x77, 0x98, 0xa5, 0x69, 0x1a, 0xdb, 0x89,
	0x5d, 0xb8, 0xec, 0x29, 0x38, 0x4d, 0xea, 0xd0, 0xae, 0x55, 0x68, 0x0d, 0xca, 0x81, 0xc6, 0x72,
	0x32, 0x26, 0x5e, 0x78, 0xcf, 0x31, 0x25, 0x2d, 0xb7, 0xf8, 0xe7, 0x38, 0x1f, 0x7f, 0xa8, 0x94,
	0x5b, 0xa7, 0xdd, 0x46, 0xd4, 0x05, 0x87, 0x95, 0x3d, 0x1e, 0x37, 0xca, 0xe2, 0x34, 0xb0, 0xbe,
	0xfd, 0xe5, 0x50, 0xd4, 0xa9, 0x8d, 0x0f, 0x30, 0xf3, 0x7d, 0x63, 0x3b, 0xca, 0x56, 0xd9, 0x7a,
	0x56, 0x4f, 0x7d, 0xbf, 0xed, 0xf0, 0x11, 0xe6, 0x3f, 0x9e, 0x35, 0x72, 0x9e, 0xb8, 0x88, 0xe5,
	0xb6, 0xc3, 0x27, 0x28, 0x3b, 0x3e, 0xdb, 0x96, 0x63, 0x6b, 0xb2, 0xca, 0xd6, 0x65, 0xbd, 0x18,
	0x60, 0xdb, 0xe1, 0x2d, 0xe4, 0xce, 0xd3, 0x34, 0x69, 0xee, 0x3c, 0xbe, 0xc0, 0xd2, 0x88, 0x34,
	0x67, 0x56, 0x6f, 0x5d, 0x4f, 0xb3, 0xd4, 0x00, 0x23, 0xf2, 0x3d, 0x48, 0x1c, 0xb0, 0x42, 0xc5,
	0x30, 0x60, 0x05, 0x9f, 0x01, 0x82, 0x3d, 0x71, 0xe3, 0x83, 0x39, 0x09, 0xcd, 0x57, 0xd9, 0x7a,
	0x52, 0x97, 0x51, 0xbe, 0x22, 0x20, 0xc1, 0xfc, 0x97, 0xf7, 0xde, 0x06, 0xa6, 0x45, 0x9a, 0xb9,
	0x96, 0xf8, 0x0a, 0x55, 0xeb, 0xfa, 0x9e, 0xdb, 0xd0, 0xc4, 0xed, 0x54, 0xa6, 0x47, 0x2f, 0x47,
	0xdb, 0xd9, 0x13, 0x23, 0xc2, 0x54, 0x4d, 0x60, 0x82, 0xe1, 0x9b, 0x71, 0x1d, 0x0f, 0x0c, 0x6a,
	0x0e, 0x07, 0xdb, 0xd2, 0x32, 0xf1, 0xb5, 0xc4, 0x77, 0xb8, 0x6f, 0x8d, 0xaa, 0x65, 0x6d, 0x9c,
	0xb0, 0x9a, 0xe0, 0x94, 0xaa, 0x74, 0xe7, 0xdd, 0xe8, 0x9f, 0x23, 0xc7, 0x48, 0x52, 0x56, 0xe1,
	0x22, 0x4c, 0x37, 0x43, 0x24, 0x11, 0x76, 0x17, 0xe1, 0x7d, 0x91, 0xd2, 0xff, 0xf8, 0x0f, 0x00,
	0x00, 0xff, 0xff, 0xcd, 0xa1, 0xfb, 0x69, 0x8d, 0x01, 0x00, 0x00,
}
