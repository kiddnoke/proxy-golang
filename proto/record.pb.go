// Code generated by protoc-gen-go. DO NOT EDIT.
// source: record.proto

package igg_reporter

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Record struct {
	SnId                 int64    `protobuf:"varint,1,opt,name=snId,proto3" json:"snId,omitempty"`
	UserId               int64    `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	DeviceId             string   `protobuf:"bytes,3,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	Os                   string   `protobuf:"bytes,4,opt,name=os,proto3" json:"os,omitempty"`
	AppVersion           string   `protobuf:"bytes,5,opt,name=appVersion,proto3" json:"appVersion,omitempty"`
	Ip                   string   `protobuf:"bytes,6,opt,name=ip,proto3" json:"ip,omitempty"`
	Time                 int64    `protobuf:"varint,7,opt,name=time,proto3" json:"time,omitempty"`
	Website              string   `protobuf:"bytes,8,opt,name=website,proto3" json:"website,omitempty"`
	ConnectTime          int64    `protobuf:"varint,9,opt,name=connectTime,proto3" json:"connectTime,omitempty"`
	Rate                 int64    `protobuf:"varint,10,opt,name=rate,proto3" json:"rate,omitempty"`
	Traffic              int64    `protobuf:"varint,11,opt,name=traffic,proto3" json:"traffic,omitempty"`
	CarrierOperator      string   `protobuf:"bytes,12,opt,name=carrierOperator,proto3" json:"carrierOperator,omitempty"`
	UserType             string   `protobuf:"bytes,13,opt,name=userType,proto3" json:"userType,omitempty"`
	AppId                int64    `protobuf:"varint,14,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	NetworkType          string   `protobuf:"bytes,15,opt,name=networkType,proto3" json:"networkType,omitempty"`
	Code                 string   `protobuf:"bytes,16,opt,name=code,proto3" json:"code,omitempty"`
	ServerIp             string   `protobuf:"bytes,17,opt,name=serverIp,proto3" json:"serverIp,omitempty"`
	ServerType           string   `protobuf:"bytes,18,opt,name=serverType,proto3" json:"serverType,omitempty"`
	AverageSpeed         int64    `protobuf:"varint,19,opt,name=average_speed,json=averageSpeed,proto3" json:"average_speed,omitempty"`
	MaxSpeed             int64    `protobuf:"varint,20,opt,name=max_speed,json=maxSpeed,proto3" json:"max_speed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Record) Reset()         { *m = Record{} }
func (m *Record) String() string { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()    {}
func (*Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf94fd919e302a1d, []int{0}
}

func (m *Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Record.Unmarshal(m, b)
}
func (m *Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Record.Marshal(b, m, deterministic)
}
func (m *Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Record.Merge(m, src)
}
func (m *Record) XXX_Size() int {
	return xxx_messageInfo_Record.Size(m)
}
func (m *Record) XXX_DiscardUnknown() {
	xxx_messageInfo_Record.DiscardUnknown(m)
}

var xxx_messageInfo_Record proto.InternalMessageInfo

func (m *Record) GetSnId() int64 {
	if m != nil {
		return m.SnId
	}
	return 0
}

func (m *Record) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Record) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *Record) GetOs() string {
	if m != nil {
		return m.Os
	}
	return ""
}

func (m *Record) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *Record) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Record) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Record) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *Record) GetConnectTime() int64 {
	if m != nil {
		return m.ConnectTime
	}
	return 0
}

func (m *Record) GetRate() int64 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *Record) GetTraffic() int64 {
	if m != nil {
		return m.Traffic
	}
	return 0
}

func (m *Record) GetCarrierOperator() string {
	if m != nil {
		return m.CarrierOperator
	}
	return ""
}

func (m *Record) GetUserType() string {
	if m != nil {
		return m.UserType
	}
	return ""
}

func (m *Record) GetAppId() int64 {
	if m != nil {
		return m.AppId
	}
	return 0
}

func (m *Record) GetNetworkType() string {
	if m != nil {
		return m.NetworkType
	}
	return ""
}

func (m *Record) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Record) GetServerIp() string {
	if m != nil {
		return m.ServerIp
	}
	return ""
}

func (m *Record) GetServerType() string {
	if m != nil {
		return m.ServerType
	}
	return ""
}

func (m *Record) GetAverageSpeed() int64 {
	if m != nil {
		return m.AverageSpeed
	}
	return 0
}

func (m *Record) GetMaxSpeed() int64 {
	if m != nil {
		return m.MaxSpeed
	}
	return 0
}

func init() {
	proto.RegisterType((*Record)(nil), "igg.reporter.Record")
}

func init() { proto.RegisterFile("record.proto", fileDescriptor_bf94fd919e302a1d) }

var fileDescriptor_bf94fd919e302a1d = []byte{
	// 345 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x92, 0xcb, 0x6a, 0x32, 0x41,
	0x10, 0x85, 0xf1, 0x36, 0x6a, 0x39, 0xea, 0xff, 0x77, 0x2e, 0x14, 0x09, 0x04, 0x49, 0x36, 0xae,
	0xdc, 0xe4, 0x29, 0x66, 0x15, 0x30, 0x92, 0xad, 0xb4, 0xd3, 0xa5, 0x34, 0xc1, 0xe9, 0xa6, 0xba,
	0xa3, 0xe6, 0x69, 0xf2, 0xaa, 0xa1, 0x6b, 0x9c, 0x44, 0xb2, 0xab, 0xf3, 0x75, 0x5d, 0x0e, 0x87,
	0x86, 0x9c, 0xa9, 0x74, 0x6c, 0x16, 0x9e, 0x5d, 0x74, 0x2a, 0xb7, 0xbb, 0xdd, 0x82, 0xc9, 0x3b,
	0x8e, 0xc4, 0x8f, 0x5f, 0x5d, 0xc8, 0x96, 0xf2, 0xac, 0x14, 0x74, 0x43, 0x55, 0x18, 0x6c, 0xcd,
	0x5a, 0xf3, 0xce, 0x52, 0x6a, 0x75, 0x0b, 0xd9, 0x47, 0x20, 0x2e, 0x0c, 0xb6, 0x85, 0x9e, 0x95,
	0xba, 0x83, 0x81, 0xa1, 0x83, 0x2d, 0xa9, 0x30, 0xd8, 0x99, 0xb5, 0xe6, 0xc3, 0xe5, 0x8f, 0x56,
	0x13, 0x68, 0xbb, 0x80, 0x5d, 0xa1, 0x6d, 0x17, 0xd4, 0x03, 0x80, 0xf6, 0xfe, 0x8d, 0x38, 0x58,
	0x57, 0x61, 0x4f, 0xf8, 0x05, 0x49, 0xfd, 0xd6, 0x63, 0x56, 0xf7, 0x5b, 0x9f, 0x7c, 0x44, 0xbb,
	0x27, 0xec, 0xd7, 0x3e, 0x52, 0xad, 0x10, 0xfa, 0x47, 0xda, 0x04, 0x1b, 0x09, 0x07, 0xd2, 0xd8,
	0x48, 0x35, 0x83, 0x51, 0xe9, 0xaa, 0x8a, 0xca, 0xb8, 0x4a, 0x43, 0x43, 0x19, 0xba, 0x44, 0x69,
	0x1f, 0xeb, 0x48, 0x08, 0xf5, 0xbe, 0x54, 0xa7, 0x7d, 0x91, 0xf5, 0x76, 0x6b, 0x4b, 0x1c, 0x09,
	0x6e, 0xa4, 0x9a, 0xc3, 0xb4, 0xd4, 0xcc, 0x96, 0xf8, 0xc5, 0x13, 0xeb, 0xe8, 0x18, 0x73, 0xb9,
	0xf8, 0x17, 0xa7, 0x0c, 0x52, 0x1a, 0xab, 0x4f, 0x4f, 0x38, 0xae, 0x33, 0x68, 0xb4, 0xba, 0x81,
	0x4c, 0x7b, 0xbf, 0xb6, 0x06, 0x27, 0xb2, 0xbe, 0xa7, 0xbd, 0x2f, 0x4c, 0x32, 0x5b, 0x51, 0x3c,
	0x3a, 0x7e, 0x97, 0xa9, 0xa9, 0x4c, 0x5d, 0xa2, 0x64, 0xb6, 0x74, 0x86, 0xf0, 0x9f, 0x3c, 0x49,
	0x9d, 0x0e, 0x05, 0xe2, 0x03, 0x71, 0xe1, 0xf1, 0x7f, 0x7d, 0xa8, 0xd1, 0x29, 0xdc, 0xba, 0x96,
	0x85, 0xaa, 0x0e, 0xf7, 0x97, 0xa8, 0x27, 0x18, 0xeb, 0x03, 0xb1, 0xde, 0xd1, 0x3a, 0x78, 0x22,
	0x83, 0x57, 0xe2, 0x27, 0x3f, 0xc3, 0xd7, 0xc4, 0xd4, 0x3d, 0x0c, 0xf7, 0xfa, 0x74, 0x6e, 0xb8,
	0x96, 0x86, 0xc1, 0x5e, 0x9f, 0xe4, 0x71, 0x93, 0xc9, 0xb7, 0x79, 0xfe, 0x0e, 0x00, 0x00, 0xff,
	0xff, 0xc5, 0x37, 0x16, 0x58, 0x46, 0x02, 0x00, 0x00,
}
